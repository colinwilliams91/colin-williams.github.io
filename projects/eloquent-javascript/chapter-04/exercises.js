////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(start, end, step = start < end ? 1 : -1) {
  let output = [];
  
  if (start === end){
    return output;
  }
  if (step > 0) {
    for (let i = start; i <= end; i += step) output.push(i);
    } else {
    for (let i = start; i >= end; i += step) output.push(i);
    }
    return output;
  } 

// *** WHY DOES THIS BREAK INDEX.HTML ??? ***
//   if (start === end){
//     return output;
//   } else if (end > 0){
//     for (i = start; i <= end; i += step){
//       output.push(i);
//     }
//   } else if (end < 0){
//     for (i = start; i >= end; i -+ step){
//     output.push(i);
//     }
//   }
//   return output;
// }

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum() {

}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray() {

}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace() {

}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList() {

}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray() {

}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend() {

}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth() {

}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual(x, y){
  // determine if x and y are BOTH not objects
  if (typeof x !== "object" && typeof y !== "object"){
    return x === y;
  }
  // determine if either x or y is not an object
  if (typeof x !== "object" || typeof y !== "object"){
    return false;
  }
  // create array of keys for x
  let xKeys = Object.keys(x); // ["a", "b"]
  // create array of keys for y
  let yKeys = Object.keys(y); // ["a", "b"]
  // determine if the length of the arrays is not equal
  if (xKeys.length !== yKeys.length){
    return false;
  }
  // iterate through one of the array of keys
  for (let i = 0; i < xKeys.length; i++){
    if (!yKeys.includes(xKeys[i]) || !deepEqual(x[xKeys[i]], y[yKeys[i]])){
      return false;
    }
  }
  return true;
}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
